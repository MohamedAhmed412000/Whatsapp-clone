/* tslint:disable */
/* eslint-disable */
/* Code generated by ng-openapi-gen DO NOT EDIT. */

import { HttpClient, HttpContext, HttpResponse } from '@angular/common/http';
import { Observable } from 'rxjs';
import { filter, map } from 'rxjs/operators';
import { StrictHttpResponse } from '../../strict-http-response';
import { RequestBuilder } from '../../request-builder';

import { MediaReferenceListResponse } from '../../models/media-reference-list-response';

export interface UploadMedia$Params {
      body: {

/**
 * The media files
 */
'files': Array<Blob>;

/**
 * The media file path
 */
'filePath': string;

/**
 * The entity Id related to the media
 */
'entityId': string;
}
}

export function uploadMedia(http: HttpClient, rootUrl: string, params: UploadMedia$Params, context?: HttpContext): Observable<StrictHttpResponse<{
'headers'?: {

/**
 * Unique request identifier
 */
'requestId'?: any;

/**
 * Status code of the response
 */
'statusCode'?: any;
};
'body'?: MediaReferenceListResponse;
}>> {
  const rb = new RequestBuilder(rootUrl, uploadMedia.PATH, 'post');
  if (params) {
    rb.body(params.body, 'multipart/form-data');
  }

  return http.request(
    rb.build({ responseType: 'json', accept: 'application/json', context })
  ).pipe(
    filter((r: any): r is HttpResponse<any> => r instanceof HttpResponse),
    map((r: HttpResponse<any>) => {
      return r as StrictHttpResponse<{
      'headers'?: {
      
      /**
       * Unique request identifier
       */
      'requestId'?: any;
      
      /**
       * Status code of the response
       */
      'statusCode'?: any;
      };
      'body'?: MediaReferenceListResponse;
      }>;
    })
  );
}

uploadMedia.PATH = '/api/v1/media';

/* tslint:disable */
/* eslint-disable */
/* Code generated by ng-openapi-gen DO NOT EDIT. */

import { HttpClient, HttpContext, HttpResponse } from '@angular/common/http';
import { Observable } from 'rxjs';
import { filter, map } from 'rxjs/operators';
import { StrictHttpResponse } from '../../strict-http-response';
import { RequestBuilder } from '../../request-builder';

import { BooleanResponse } from '../../models/boolean-response';
import { ChatUserUpdateResource } from '../../models/chat-user-update-resource';

export interface UpdateGroupChatUsers$Params {

/**
 * The chat id
 */
  'chat-id': string;
      body: ChatUserUpdateResource
}

export function updateGroupChatUsers(http: HttpClient, rootUrl: string, params: UpdateGroupChatUsers$Params, context?: HttpContext): Observable<StrictHttpResponse<{
'headers'?: {

/**
 * Unique request identifier
 */
'requestId'?: string;

/**
 * Status code of the response
 */
'statusCode'?: string;
};
'body'?: BooleanResponse;
}>> {
  const rb = new RequestBuilder(rootUrl, updateGroupChatUsers.PATH, 'patch');
  if (params) {
    rb.path('chat-id', params['chat-id'], {});
    rb.body(params.body, 'application/json');
  }

  return http.request(
    rb.build({ responseType: 'json', accept: 'application/json', context })
  ).pipe(
    filter((r: any): r is HttpResponse<any> => r instanceof HttpResponse),
    map((r: HttpResponse<any>) => {
      return r as StrictHttpResponse<{
      'headers'?: {
      
      /**
       * Unique request identifier
       */
      'requestId'?: string;
      
      /**
       * Status code of the response
       */
      'statusCode'?: string;
      };
      'body'?: BooleanResponse;
      }>;
    })
  );
}

updateGroupChatUsers.PATH = '/api/v1/chats/{chat-id}/update-users';

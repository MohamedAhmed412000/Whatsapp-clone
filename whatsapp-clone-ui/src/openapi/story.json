{
  "openapi": "3.1.0",
  "servers": [
    {
      "url": "http://localhost:8080/story",
      "description": "Story API via Gateway"
    }
  ],
  "tags": [
    {
      "name": "User Stories Controller",
      "description": "CRUD Rest APIs for managing user-stories"
    }
  ],
  "paths": {
    "/api/v1/user-stories": {
      "post": {
        "tags": [
          "User Stories Controller"
        ],
        "summary": "Add new story",
        "operationId": "createStory",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StoryCreationResource"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Story added successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StringResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/user-stories/{user-story-id}": {
      "delete": {
        "tags": [
          "User Stories Controller"
        ],
        "summary": "Delete an existing user story",
        "operationId": "deleteStory",
        "parameters": [
          {
            "name": "user-story-id",
            "in": "path",
            "description": "The user story id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "description": "The user story id",
              "example": 1755250373935
            },
            "example": 1755250373935
          }
        ],
        "responses": {
          "200": {
            "description": "Story deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanResponse"
                }
              }
            }
          },
          "404": {
            "description": "Story not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorBody"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "User Stories Controller"
        ],
        "summary": "Update story content",
        "operationId": "updateStory",
        "parameters": [
          {
            "name": "user-story-id",
            "in": "path",
            "description": "The user story id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "description": "The user story id",
              "example": 1755250373935
            },
            "example": 1755250373935
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StoryUpdateResource"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Story content updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanResponse"
                }
              }
            }
          },
          "404": {
            "description": "Story not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorBody"
                }
              }
            }
          },
          "409": {
            "description": "Update action not allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorBody"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/user-stories/me": {
      "get": {
        "tags": [
          "User Stories Controller"
        ],
        "summary": "Retrieve my stories",
        "operationId": "getMyStories",
        "responses": {
          "200": {
            "description": "Get my stories successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserStoriesListResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/user-stories/contacts": {
      "get": {
        "tags": [
          "User Stories Controller"
        ],
        "summary": "Retrieve my contacts stories",
        "operationId": "getMyContactsStories",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/StoryDetailsResponse"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "StringResponse": {
        "type": "object",
        "description": "Schema to hold the string response",
        "properties": {
          "content": {
            "type": "string",
            "description": "Response string content"
          }
        }
      },
      "StoryCreationResource": {
        "type": "object",
        "description": "Schema to hold the story creation data",
        "properties": {
          "content": {
            "type": "string",
            "description": "The story string content",
            "example": "Hello"
          },
          "file": {
            "type": "string",
            "format": "binary",
            "description": "The story media file content"
          }
        }
      },
      "BooleanResponse": {
        "type": "object",
        "description": "Schema to hold the boolean response",
        "properties": {
          "done": {
            "type": "boolean"
          }
        }
      },
      "ErrorBody": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "details": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "StoryUpdateResource": {
        "type": "object",
        "description": "Schema to hold the story update data",
        "properties": {
          "content": {
            "type": "string",
            "description": "The story string content",
            "example": "Hello",
            "minLength": 1
          }
        },
        "required": [
          "content"
        ]
      },
      "StoryDetailsResponse": {
        "type": "object",
        "description": "Schema to hold the story details response",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "The story id",
            "example": 1755250373935
          },
          "content": {
            "type": "string",
            "description": "The story string content",
            "example": "Hello"
          },
          "mediaReference": {
            "type": "string",
            "description": "The story media reference",
            "example": "407dd10ad78743e49d0b58e7"
          },
          "storyType": {
            "type": "string",
            "description": "The story type",
            "enum": [
              "TEXT",
              "MEDIA"
            ]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "The story creation date"
          }
        }
      },
      "UserStoriesListResponse": {
        "type": "object",
        "description": "Schema to hold the story details response data",
        "properties": {
          "storiesList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StoryDetailsResponse"
            }
          }
        }
      }
    },
    "securitySchemes": {
      "keycloak": {
        "type": "oauth2",
        "in": "header",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "flows": {
          "password": {
            "authorizationUrl": "http://localhost:9090/realms/whatsapp-clone/protocol/openid-connect/auth",
            "tokenUrl": "http://localhost:9090/realms/whatsapp-clone/protocol/openid-connect/token",
            "scopes": {}
          }
        }
      }
    }
  }
}

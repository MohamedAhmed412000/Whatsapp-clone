services:
  config-server:
    container_name: config-server
    image: mohamedahmed412000/whatsapp-clone/config-server:v1.0
    ports:
      - "8071:8071"
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:8071/actuator/health/readiness"]
      start_period: 10s
      retries: 10
      interval: 10s
      timeout: 5s
    extends:
      file: common-services.yml
      service: microservice-base
    volumes:
      - ../configurations:/app/configurations
    environment:
      SPRING_CLOUD_CONFIG_SERVER_NATIVE_SEARCHLOCATIONS: "file:/app/configurations"

  eureka-server:
    container_name: eureka-discovery-server
    image: mohamedahmed412000/whatsapp-clone/discovery-server:v1.0
    ports:
      - "8090:8090"
    healthcheck:
      test: [ "CMD", "wget", "--spider", "-q", "http://localhost:8090/actuator/health/readiness" ]
      start_period: 10s
      retries: 10
      interval: 10s
      timeout: 5s
    extends:
      file: common-services.yml
      service: config-server-deploy-base
    environment:
      SPRING_APPLICATION_NAME: "discovery-service"

  core-ms:
    container_name: core-ms
    image: mohamedahmed412000/whatsapp-clone/core-server:v1.0
    ports:
      - "8091:8080"   # REST PORT
    extends:
      file: common-services.yml
      service: cache-deploy-base
    depends_on:
      rabbitmq:
        condition: service_healthy
      media-ms:
        condition: service_healthy
    environment:
      SPRING_APPLICATION_NAME: "core"
      SPRING_RABBITMQ_HOST: "rabbitmq"
      EUREKA_INSTANCE_HOSTNAME: "core-ms"
      MEDIA_SERVICE_GRPC_HOST: "media-ms"

  media-ms:
    container_name: media-ms
    image: mohamedahmed412000/whatsapp-clone/media-server:v1.0
    ports:
      - "8092:8080"   # REST PORT
      - "9092:9092"   # GRPC PORT
    extends:
      file: common-services.yml
      service: mongo-db-deploy-base
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      SPRING_APPLICATION_NAME: "media-management"
      EUREKA_INSTANCE_HOSTNAME: "media-ms"

  story-ms:
    container_name: story-ms
    image: mohamedahmed412000/whatsapp-clone/story-server:v1.0
    ports:
      - "8093:8080"   # REST PORT
      - "9093:9093"   # GRPC PORT
      - "8073:8073"   # Job Runner Dashboard PORT
    extends:
      file: common-services.yml
      service: mongo-db-deploy-base
    environment:
      SPRING_APPLICATION_NAME: "story-management"
      MEDIA_SERVICE_GRPC_HOST: "media-ms"
      EUREKA_INSTANCE_HOSTNAME: "story-ms"

  user-ms:
    container_name: user-ms
    image: mohamedahmed412000/whatsapp-clone/user-server:v1.0
    ports:
      - "8094:8080"   # REST PORT
    extends:
      file: common-services.yml
      service: cache-deploy-base
    depends_on:
      keycloak:
        condition: service_started
      media-ms:
        condition: service_healthy
      story-ms:
        condition: service_healthy
    environment:
      SPRING_APPLICATION_NAME: "user-management"
      MEDIA_SERVICE_GRPC_HOST: "media-ms"
      STORY_SERVICE_GRPC_HOST: "story-ms"
      KEYCLOAK_SERVERURL: "http://keycloak:8080"
      EUREKA_INSTANCE_HOSTNAME: "user-ms"

  web-socket-ms:
    container_name: core-ws-ms
    image: mohamedahmed412000/whatsapp-clone/web-socket-server:v1.0
    ports:
      - "8095:8080"   # REST PORT
    extends:
      file: common-services.yml
      service: mongo-db-deploy-base
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      SPRING_APPLICATION_NAME: "core-ws"
      SPRING_RABBITMQ_HOST: "rabbitmq"
      EUREKA_INSTANCE_HOSTNAME: "web-socket-ms"

  gateway-ms:
    container_name: gateway-ms
    image: mohamedahmed412000/whatsapp-clone/gateway-server:v1.0
    ports:
      - "8080:8080"   # REST PORT
    extends:
      file: common-services.yml
      service: mongo-db-deploy-base
    depends_on:
      core-ms:
        condition: service_healthy
      media-ms:
        condition: service_healthy
      story-ms:
        condition: service_healthy
      user-ms:
        condition: service_healthy
    environment:
      SPRING_APPLICATION_NAME: "gateway"
      SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUERURI: "http://keycloak:8080/realms/whatsapp-clone"
      SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_JWKSETURI: "http://keycloak:8080/realms/whatsapp-clone/protocol/openid-connect/certs"
      EUREKA_INSTANCE_HOSTNAME: "gateway-ms"

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:4.0-management
    restart: unless-stopped
    ports:
      - "5672:5672"      # AMQP
      - "15672:15672"    # Management UI
      - "61613:61613"    # STOMP
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin
    volumes:
      - ./rabbitmq/enabled_plugins:/etc/rabbitmq/enabled_plugins
      - ./rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
      - rabbitmq-lib:/var/lib/rabbitmq/
      - rabbitmq-log:/var/log/rabbitmq
    healthcheck:
      test: [ "CMD", "rabbitmq-diagnostics", "check_running" ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    extends:
      file: common-services.yml
      service: network-deploy-service

  redis-cache:
    container_name: redis-cache
    image: redis:latest
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: [ "CMD-SHELL", "redis-cli ping | grep PONG" ]
      interval: 1s
      timeout: 3s
      retries: 5
    command: [ "redis-server" ]
    extends:
      file: common-services.yml
      service: network-deploy-service

  mongo:
    container_name: mongo-db
    image: mongo:latest
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: admin
    volumes:
      - mongo_data:/data/db
      - mongo_config:/data/configdb
    ports:
      - "27017:27017"
    deploy:
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 512M
    healthcheck:
      test: mongosh --eval "db.adminCommand('ping')" -u root -p password --authenticationDatabase admin
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 20s
    extends:
      file: common-services.yml
      service: network-deploy-service

  postgres:
    container_name: postgres-db
    image: postgres:15
    restart: unless-stopped
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: keycloak
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U keycloak" ]
      interval: 10s
      timeout: 5s
      retries: 5
    extends:
      file: common-services.yml
      service: network-deploy-service

  keycloak:
    container_name: keycloak-wc
    image: quay.io/keycloak/keycloak:26.0.0
    ports:
      - "9090:8080"
    restart: unless-stopped
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: keycloak
      KEYCLOAK_HEALTH_ENABLED: "true"
      KC_HEALTH_ENABLED: "true"
    volumes:
      - ./keycloak/whatsapp-keycloak-realm.json:/opt/keycloak/data/import/realm.json
    command:
      - "start-dev"
      - "--import-realm"
    depends_on:
      postgres:
        condition: service_healthy
    extends:
      file: common-services.yml
      service: network-deploy-service

volumes:
  rabbitmq-lib:
  rabbitmq-log:
  mongo_data:
  mongo_config:
  postgres_data:
  redis_data:

networks:
  whatsapp-clone:
    driver: bridge
